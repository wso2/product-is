<%

include("util/constants.jag");
var util = require("util/utility.jag");
var commonUtil = require("/util/utility.jag");

var lg = new Log();
commonUtil.setServerURL();
initAuthenticationProtocol();

var samlConfig = application.get(SAML_PROPERTIES);
var sso = require("sso");
var sessionId = session.getId();
var encodedSAMLRequest;
var postUrl;
var postUrl = samlConfig['SAML.IdPUrl'];
var issuer = samlConfig['SAML.IssuerID'];


if(request.getParameter("login") === 'true'){
	encodedSAMLRequest = sso.client.getEncodedSAMLAuthRequest(issuer);
	
}else if(request.getParameter("logout") === 'true'){
	var user = session.get(LOGGED_IN_USER);
    sso_sessions = application.get('sso_sessions'),
    encodedSAMLRequest = sso.client.getEncodedSAMLLogoutRequest(user, sso_sessions[sessionId], issuer);
}

function initAuthenticationProtocol(){
	
	if(application.get(AUTH_CONFIG_PARSED)){
		return;
	}
	var authConfig = readFile("/gadgets/identity_management/authentication/auth_config.json");
	if(authConfig.EnableSAMLSSOLogin === "true"){
	

			
		//If only saml enabled, we do initialize the saml flow. 
		var samlConfig = authConfig.saml_config;
		var properties = {};
		
		var sys = Packages.java.lang.System;
		var carbonHome = sys.getProperty("carbon.home");
		var serverUrl = util.getServerUrl();
		var server = stringify(serverUrl);
		if(server.indexOf("[") > -1 || server.indexOf("]") > -1){
			serverUrl = serverUrl[0];
		}
		lg.info(samlConfig);
		lg.info(serverUrl);

		var serverCoreUrl = application.get(SERVER_CORE_URL);
		for (var prop in samlConfig){
			if (samlConfig.hasOwnProperty(prop)) {
				var value = samlConfig[prop];
				if(prop === "SAML.KeyStore"){
					value = value.replace("{carbon.home}", carbonHome);
				}
				if(prop === "SAML.IdPUrl"){
					if(prop.indexOf("http") > -1){
						value = value;
					}else{
						//value = mgtTransport + "://" + mgtHostName + ":" + httpsPort + "/" + (value);
						value = serverCoreUrl + "/" + (value);
					}

				}
				lg.info(value);
				properties[prop] = value;
			}
		}
		
		application.put(SAML_ENABLED, true);
		application.put(SAML_PROPERTIES, properties);
		
		var samlLogin = "<sso:login xmlns:sso=\"http://sso.saml2.authenticator.identity.carbon.wso2.org\" xmlns:xsd=\"http://dto.sso.saml2.authenticator.identity.carbon.wso2.org/xsd\">\n" +
						"<sso:authDto>\n" +
							"<xsd:response>{0}</xsd:response>\n" +
						"</sso:authDto>\n" + 
						"</sso:login>";
		
		application.put("urn:login", samlLogin);


	}
	
	application.put(AUTH_CONFIG_PARSED, true);
	
}

function readFile(path){
	var file = new File(path);
	file.open("r");
	var json = "";
	
	json = file.readAll();
	file.close();
	json = parse(json);
	
	return json;
}


%>


<!DOCTYPE html>
<!--[if lt IE 7]>
<html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>
<html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>
<html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js"> <!--<![endif]-->
<head>

</head>
<body>

<div>

<p>You are now being redirected to Identity Server. If the
redirection fails, please click on the button below.</p>
<form method="POST" action="<%=postUrl%>">
<p>
   <input type="hidden" name="SAMLRequest" value="<%= encodedSAMLRequest %>"/>
   <input type="hidden" name="SSOAuthSessionID" value="<%= sessionId %>"/>
   <button type="submit">Redirect manually</button>
</p>
</form>
</div>
<script type = "text/javascript" >
	document.forms[0].submit();
</script>

</body>
</html>
