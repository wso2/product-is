<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2019-2024, WSO2 LLC. (http://www.wso2.com).
  ~
  ~ WSO2 LLC. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cxf="http://cxf.apache.org/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">
    <import resource="classpath:META-INF/cxf/user-association-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/authorized-apps-user-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/authorized-apps-user-v2-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/session-user-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-fido2-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-totp-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-backupcode-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-mfa-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/permission-management-v1-cxf.xml"/>
    <!--<import resource="classpath:META-INF/cxf/workflow-engine-server-v1-cxf.xml"/>-->
    <import resource="classpath:META-INF/cxf/claim-management-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/email-template-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/email-template-server-v2-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/notification-template-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/applications-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/application-user-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/keystore-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/idp-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/oidc-scope-management-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-recovery-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-recovery-v2-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/script-libraries-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/configs-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/notification-sender-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/authenticators-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/secret-management-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/branding-preference-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/input-validation-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/expired-password-identification-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-onboard-management-cxf.xml"/>

    <import resource="classpath:META-INF/cxf/identity-governance-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/admin-advisory-management-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-store-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/tenant-management-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cors-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-functionality-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/organization-user-invitation-mgt-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/organization-configs-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/self-service-mgt-v1-cxf.xml"/>

    <!-- Legacy identity APIs   -->
    <import resource="classpath:META-INF/cxf/config-mgt-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/auth-v1-1-cfx.xml"/>
    <import resource="classpath:META-INF/cxf/extension-mgt-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/idv-provider-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/idv-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/org-mgt-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/org-role-mgt-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/user-organization-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/api-resource-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/action-server-v1-cxf.xml"/>
    <import resource="classpath:META-INF/cxf/rule-metadata-server-v1-cxf.xml"/>

    <context:property-placeholder/>
    <context:annotation-config/>
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"/>
    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"/>
    <bean id="postprocess" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <bean id="validationProvider" class="org.apache.cxf.validation.BeanValidationProvider"/>
    <bean id="validationInInterceptor"
          class="org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor">
        <property name="provider" ref="validationProvider"/>
    </bean>
    <jaxrs:server id="serverV2" address="/server/v2">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.server.email.template.v2.EmailApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
            <bean class="org.apache.cxf.jaxrs.ext.search.SearchContextProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
    <jaxrs:server id="server" address="/server/v1">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.server.claim.management.v1.ClaimManagementApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.server.email.template.v1.EmailApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.server.notification.template.v1.NotificationApi"/>
            <bean class="org.wso2.carbon.identity.api.server.identity.governance.v1.IdentityGovernanceApi"/>
            <bean class="org.wso2.carbon.identity.api.server.admin.advisory.management.v1.AdminAdvisoryManagementApi"/>
            <bean class="org.wso2.carbon.identity.api.server.application.management.v1.ApplicationsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.userstore.v1.UserstoresApi"/>
            <bean class="org.wso2.carbon.identity.api.server.permission.management.v1.PermissionManagementApi"/>
            <bean class="org.wso2.carbon.identity.api.server.keystore.management.v1.KeystoresApi"/>
            <bean class="org.wso2.carbon.identity.api.server.idp.v1.IdentityProvidersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.idp.v1.TrustedTokenIssuersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.configs.v1.ConfigsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.oidc.scope.management.v1.OidcApi"/>
            <bean class="org.wso2.carbon.identity.api.server.script.library.v1.ScriptLibrariesApi"/>
            <bean class="org.wso2.carbon.identity.api.server.tenant.management.v1.TenantsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.tenant.management.v1.ChannelVerifiedTenantsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.cors.v1.CorsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.notification.sender.v1.NotificationSendersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.authenticators.v1.AuthenticatorsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.secret.management.v1.SecretsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.secret.management.v1.SecretTypeApi"/>
            <bean class="org.wso2.carbon.identity.api.server.branding.preference.management.v1.BrandingPreferenceApi"/>
            <bean class="org.wso2.carbon.identity.api.server.input.validation.v1.ValidationRulesApi"/>
            <bean class="org.wso2.carbon.identity.api.server.extension.management.v1.ExtensionsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.idv.provider.v1.IdvProvidersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.management.v1.OrganizationsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.role.management.v1.OrganizationsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.user.invitation.management.v1.GuestsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.configs.v1.OrganizationConfigsApi"/>
            <bean class="org.wso2.carbon.identity.api.expired.password.identification.v1.PasswordExpiredUsersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.api.resource.v1.ApiResourcesApi"/>
            <bean class="org.wso2.carbon.identity.api.server.api.resource.v1.ScopesApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.selfservice.v1.SelfServiceApi"/>
            <bean class="org.wso2.carbon.identity.api.server.api.resource.v1.MetaApi"/>
            <bean class="org.wso2.carbon.identity.api.server.action.management.v1.ActionsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.rule.metadata.v1.RulesApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
            <bean class="org.apache.cxf.jaxrs.ext.search.SearchContextProvider"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>
    <jaxrs:server id="organization v2" address="/o/server/v2">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.server.email.template.v2.EmailApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
            <bean class="org.apache.cxf.jaxrs.ext.search.SearchContextProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
    <jaxrs:server id="organization" address="/o/server/v1">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.server.claim.management.v1.ClaimManagementApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.server.email.template.v1.EmailApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.server.notification.template.v1.NotificationApi"/>
            <bean class="org.wso2.carbon.identity.api.server.identity.governance.v1.IdentityGovernanceApi"/>
            <bean class="org.wso2.carbon.identity.api.server.application.management.v1.ApplicationsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.userstore.v1.UserstoresApi"/>
            <bean class="org.wso2.carbon.identity.api.server.idp.v1.IdentityProvidersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.configs.v1.ConfigsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.cors.v1.CorsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.notification.sender.v1.NotificationSendersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.authenticators.v1.AuthenticatorsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.branding.preference.management.v1.BrandingPreferenceApi"/>
            <bean class="org.wso2.carbon.identity.api.server.input.validation.v1.ValidationRulesApi"/>
            <bean class="org.wso2.carbon.identity.api.server.extension.management.v1.ExtensionsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.idv.provider.v1.IdvProvidersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.management.v1.OrganizationsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.role.management.v1.OrganizationsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.user.invitation.management.v1.GuestsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.configs.v1.OrganizationConfigsApi"/>
            <bean class="org.wso2.carbon.identity.api.server.organization.selfservice.v1.SelfServiceApi"/>
            <bean class="org.wso2.carbon.identity.api.expired.password.identification.v1.PasswordExpiredUsersApi"/>
            <bean class="org.wso2.carbon.identity.api.server.api.resource.v1.ApiResourcesApi"/>
            <bean class="org.wso2.carbon.identity.api.server.api.resource.v1.ScopesApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
            <bean class="org.apache.cxf.jaxrs.ext.search.SearchContextProvider"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>
    <jaxrs:server id="users" address="/users/v1">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.user.application.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.association.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.association.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.backupcode.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.fido2.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.functionality.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.functionality.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.mfa.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.recovery.v1.RecoveryApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.session.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.session.v1.SessionsApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.session.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.totp.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.idv.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.idv.v1.DefaultApi"/>
            <bean class="org.wso2.carbon.identity.api.user.onboard.v1.OfflineInviteLinkApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>
    <jaxrs:server id="orgPerspectiveUsers" address="/o/users/v1">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.user.application.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.association.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.association.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.backupcode.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.fido2.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.functionality.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.functionality.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.mfa.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.recovery.v1.RecoveryApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.session.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.session.v1.SessionsApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.session.v1.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.totp.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.idv.v1.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.idv.v1.DefaultApi"/>
            <bean class="org.wso2.carbon.identity.api.user.onboard.v1.OfflineInviteLinkApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>
    <jaxrs:server id="orgUser" address="/users/v1/me/organizations">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.user.organization.v1.RootApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.organization.v1.MeApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>
    <jaxrs:server id="orgUserOrgPerspective" address="/o/users/v1/me/organizations">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.user.organization.v1.RootApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.organization.v1.MeApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>
    <jaxrs:server id="usersV2" address="/users/v2">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v2.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v2.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v2.AuthorizedAppsApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.recovery.v2.RecoveryApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>
    <jaxrs:server id="OrgPerspectiveUsersV2" address="/o/users/v2">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v2.MeApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v2.UserIdApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.authorized.apps.v2.AuthorizedAppsApi"/>
            <bean class="org.wso2.carbon.identity.rest.api.user.recovery.v2.RecoveryApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
                <constructor-arg>
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL" />
                    </bean>
                </constructor-arg>
            </bean>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.JsonProcessingExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.APIErrorExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.InputValidationExceptionMapper"/>
            <bean class="org.wso2.carbon.identity.api.dispatcher.core.DefaultExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:inInterceptors>
            <ref bean="validationInInterceptor"/>
        </jaxrs:inInterceptors>
    </jaxrs:server>

    <!-- Legacy identity APIs   -->
    <jaxrs:server id="configMgt" address="/identity/config-mgt/v1.0">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.configuration.mgt.endpoint.ResourceApi"/>
            <bean class="org.wso2.carbon.identity.configuration.mgt.endpoint.ResourceTypeApi"/>
            <bean class="org.wso2.carbon.identity.configuration.mgt.endpoint.SearchApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.apache.cxf.jaxrs.ext.search.SearchContextProvider"/>
        </jaxrs:providers>
    </jaxrs:server>
    <jaxrs:server id="localAuth" address="/identity/auth/v1.1">
        <jaxrs:serviceBeans>
            <bean class="org.wso2.carbon.identity.local.auth.api.endpoint.AuthenticateApi"/>
            <bean class="org.wso2.carbon.identity.local.auth.api.endpoint.ContextApi"/>
            <bean class="org.wso2.carbon.identity.local.auth.api.endpoint.DataApi"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean id="exceptionMapper" class="org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper">
                <property name="printStackTrace" value="false" />
            </bean>
        </jaxrs:providers>
    </jaxrs:server>
    <cxf:bus>
        <cxf:properties>
            <entry key="search.query.parameter.name" value="filter"/>
            <entry key="search.parser">
                <bean class="org.apache.cxf.jaxrs.ext.search.odata.ODataParser">
                    <constructor-arg value="#{ T(org.apache.cxf.jaxrs.ext.search.SearchBean) }"/>
                </bean>
            </entry>
        </cxf:properties>
    </cxf:bus>
</beans>
